@model SBS.BusinessEntities.ViewModel.ServiceViewModel

@{
    ViewBag.Title = "Create";
}

<head>
    <style>
        .main {
            margin-top: 10px;
            padding: 10px 15px;
        }

        .container {
            margin-left: 5%;
            width: auto;
            margin-right: 3%;
        }

        .jumbotron {
            background-color: #235465;
            color: white;
            width: 80%;
            margin-left: 12%;
        }
    </style>
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">

        <div class="jumbotron">
            <h4 class="text-center" style="font-size : 20px; font-family : 'Bookman Old Style';">Add Service Details Here</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.mechanicID)
            @Html.HiddenFor(model => model.ID)
            <div class="form-group">
                @Html.LabelFor(model => model.ServiceName, htmlAttributes: new { @class = "control-label col-md-2" })
                
                    @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
               
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                
                    
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                   
               
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.mechanicID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.mechanicID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.mechanicID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
