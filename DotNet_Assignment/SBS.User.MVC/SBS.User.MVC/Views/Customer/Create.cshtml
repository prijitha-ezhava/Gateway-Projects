@model SBS.BusinessEntities.ViewModel.CustomerViewModel

@{
    ViewBag.Title = "Register Customer";
}

<head>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <style>
        .error {
            color: red;
        }

        .form-horizontal {
            justify-content: center;
            margin-left: auto;
            margin-right: auto;
            margin-left: 20%;
            width: 100%;
        }

        .jumbotron {
            justify-content: center;
            margin-left: auto;
            margin-right: auto;
            max-width: 90%;
            color: white;
            background-color: #8d99ae;
        }

        .col-md-10 {
            width: 70%;
        }

        .mybtn {
            outline: none;
            height: 50px;
            width: 100%;
            background-color: #2b2d42;
            color: white;
            border: 2px solid;
            border-color: white;
            border-radius: 4px;
            font-weight: bold;
        }

            .mybtn:hover {
                background-color: #495057;
                border: 2px solid white;
                color: white;
            }
    </style>
</head>



@using (Html.BeginForm("Create", "Customer", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <h2 class="text-center" style="color:black;">Register here for new account</h2>
        <div class="jumbotron">
            <div class="form-horizontal">
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10" style="margin-top: 20px;">
                        <input type="submit" value="REGISTER" class="btn btn-primary" />
                    </div>
                </div>
                <p style="margin-left:140px; font-size : 15px;">Already have an account?  <a href="@Url.Action("Login","Customer")">Login here</a></p>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
